{"version":3,"sources":["redux/budget/budgetActions.js","components/shared/Form.jsx","components/shared/Label.jsx","components/shared/Input.jsx","components/shared/Button.jsx","components/BudgetForm/BudgetForm.jsx","components/BudgetForm/BudgetFormContainer.js","components/ExpenseForm/ExpenseForm.jsx","redux/expense/expenseAction.js","components/ExpenseForm/ExpenseFormContainer.js","components/ExpensesTable/ExpensesTable.jsx","redux/expense/expenseSelector.js","components/ExpensesTable/ExpenseTableContainer.js","components/Value/Value.jsx","components/Values/Values.jsx","redux/values/valuesSelector.js","components/Values/ValuesContainer.js","components/App.jsx","redux/budget/budgetReducer.js","redux/expense/expenseReducer.js","redux/store.js","index.js"],"names":["Type","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","StyledButton","button","Button","onClick","defaultProps","BudgetForm","state","budget","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","Number","this","placeholder","Component","connect","dispatch","payload","ExpenseForm","amount","id","shortid","generate","Table","table","ExpensesTable","items","onRemove","map","key","getItems","expenses","removeExpense","Container","div","isPositive","p","Amount","Value","section","Values","balance","getBudget","countExpenses","createSelector","reduce","total","item","countBalance","App","budgetReducer","expensesReducer","filter","rootReducer","combineReducers","expenseReducer","middleware","applyMiddleware","ReduxThunk","logger","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59193467.chunk.js","sourcesContent":["export const Type = {\n  ADD_BUDGET: 'ADD_BUDGET',\n};\n\nexport const addBudget = budget => ({\n  type: Type.ADD_BUDGET,\n  payload: budget,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  customStyles: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.defaultProps = {\n  onClick: null,\n  type: 'button',\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass BudgetForm extends Component {\n  state = { budget: '' };\n\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave(Number(this.state.budget));\n\n    this.setState({ budget: '' });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input\n            type=\"number\"\n            value={budget}\n            onChange={this.handleChange}\n            placeholder={0}\n            name=\"budget\"\n          />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nexport default BudgetForm;\n","import { connect } from 'react-redux';\nimport { addBudget } from '../../redux/budget/budgetActions';\nimport BudgetForm from './BudgetForm';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: form => dispatch(addBudget(form)),\n});\n\nexport default connect(null, mapDispatchToProps)(BudgetForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nexport default class ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: '',\n  };\n\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave({\n      id: shortid.generate(),\n      amount: Number(this.state.amount),\n      name: this.state.name,\n    });\n\n    this.setState({ name: '', amount: '' });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            placeholder={0}\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n","export const Type = {\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n};\n\nexport const addExpense = expense => ({\n  type: Type.ADD_EXPENSE,\n  payload: expense,\n});\n\nexport const removeExpense = id => ({\n  type: Type.REMOVE_EXPENSE,\n  payload: id,\n});\n","import { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { addExpense } from '../../redux/expense/expenseAction';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: form => dispatch(addExpense(form)),\n});\n\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Button from '../shared/Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ExpensesTable;\n","const getItems = state => state.expenses;\n\nexport default getItems;\n","import { connect } from 'react-redux';\nimport ExpensesTable from './ExpensesTable';\nimport { removeExpense } from '../../redux/expense/expenseAction';\nimport getItems from '../../redux/expense/expenseSelector';\n\nconst mapStateToProps = state => ({\n  items: getItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(removeExpense(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Amount = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Value = ({ label = '', value = 0, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Amount>{value}&nbsp;&#x24;</Amount>\n  </Container>\n);\n\nValue.defaultProps = {\n  isPositive: false,\n};\n\nValue.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\n\nexport default Value;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Value from '../Value/Value';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Value label=\"Budget\" value={budget} isPositive />\n    <Value label=\"Expenses\" value={expenses} />\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Values;\n","import { createSelector } from 'reselect';\n\nexport const getBudget = state => state.budget;\n\nexport const getExpenses = state => state.expenses;\n\nexport const countExpenses = createSelector([getExpenses], expenses =>\n  expenses.reduce((total, item) => total + item.amount, 0),\n);\n\nexport const countBalance = state => {\n  const budget = getBudget(state);\n  const expenses = countExpenses(state);\n\n  return budget - expenses;\n};\n","import { connect } from \"react-redux\";\nimport Values from \"./Values\";\n\nimport {\n  getBudget,\n  countExpenses,\n  countBalance\n} from \"../../redux/values/valuesSelector\";\n\nconst mapStateToProps = state => ({\n  budget: getBudget(state),\n  expenses: countExpenses(state),\n  balance: countBalance(state)\n});\n\nexport default connect(mapStateToProps)(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport BudgetForm from './BudgetForm/BudgetFormContainer';\nimport ExpenseForm from './ExpenseForm/ExpenseFormContainer';\nimport ExpensesTable from './ExpensesTable/ExpenseTableContainer';\nimport Values from './Values/ValuesContainer';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      <ExpensesTable />\n    </Container>\n  );\n};\n\nexport default App;\n","import { Type } from './budgetActions';\n\nconst budgetReducer = (state = 0, { type, payload }) => {\n  switch (type) {\n    case Type.ADD_BUDGET:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default budgetReducer;\n","import { Type } from './expenseAction';\n\nconst expensesReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.ADD_EXPENSE:\n      return [...state, payload];\n\n    case Type.REMOVE_EXPENSE:\n      return state.filter(item => item.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default expensesReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\nimport budgetReducer from './budget/budgetReducer';\nimport expenseReducer from './expense/expenseReducer';\n\nconst rootReducer = combineReducers({\n  budget: budgetReducer,\n  expenses: expenseReducer,\n});\n\nconst middleware = applyMiddleware(ReduxThunk, logger);\n\nconst store = createStore(rootReducer, composeWithDevTools(middleware));\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './common/styles.css';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}